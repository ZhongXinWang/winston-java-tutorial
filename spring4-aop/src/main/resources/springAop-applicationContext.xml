<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <bean class="com.winston.aop.logger.LoggerAfterAspect" id="loggerAfterAspect"/>
    <bean class="com.winston.aop.logger.LoggerBeforeAspect" id="loggerBeforeAspect"/>
    <bean class="com.winston.aop.logger.LoggerAfterReturnAspect" id="loggerAfterReturnAspect"/>
    <bean class="com.winston.aop.logger.LoggerAfterThrowAspect" id="loggerAfterThrowAspect"/>
    <bean class="com.winston.aop.logger.LoggerAroundAspect" id="loggerAroundAspect"/>
   <!-- <bean class="com.winston.aop.logger.SimpleCalc" id="simpleCalc"/>-->
    <!--spring 上下文工具类-->
    <bean class="com.winston.spring.util.SpringContextUtils" id="springUtils"/>
    <!--BeanPostProcessor 修改bean初始化之后的属性-->
    <bean class="com.winston.spring.util.MyBeanPostProcessor" id="myBeanPostProcessor"/>


    <aop:config>
        <!--配置一个aspect-->
        <!--全局切入点-->
        <aop:pointcut id="defaultPointCut" expression="execution(* com.winston.aop.logger.SimpleCalc+.*(..)) and args(args1,args2)"/>
        <!--前置通知-->
        <!--添加参数时，args(args1,args2) 参数个数要一直，类型要兼容，最好使用Object-->
        <aop:aspect id="beforeAspect" ref="loggerBeforeAspect">
            <!--配置切入点,定位需要执行这个切面的那个方法-->
            <aop:before method="beforeAdvice" pointcut-ref="defaultPointCut" arg-names="args1,args2"/>
        </aop:aspect>
        <!--后置通知-->
        <aop:aspect id="afterAspect" ref="loggerAfterAspect">
            <aop:after method="afterAdvice" pointcut-ref="defaultPointCut" arg-names="args1,args2"/>
        </aop:aspect>
        <!--执行到返回后通知-->
        <aop:aspect id="afterReturnAspect" ref="loggerAfterReturnAspect">
            <aop:pointcut id="afterReturnPointCut" expression="execution(* com.winston.aop.logger.SimpleCalc+.*(..))"/>
            <aop:after-returning  method="afterReturn"  pointcut-ref="afterReturnPointCut" returning="returnValue"/>
        </aop:aspect>
        <!--执行出现异常时调用-->
        <aop:aspect id="afterThrowAspect" ref="loggerAfterThrowAspect">
            <aop:pointcut id="afterThrowPointCut" expression="execution(* com.winston.aop.logger.SimpleCalc+.*(..))"/>
            <aop:after-throwing  method="afterThrow"  pointcut-ref="afterThrowPointCut" throwing="exception"/>
        </aop:aspect>

        <!--环绕通知  直接指定pointcut切入点-->
      <!--  <aop:aspect id="aroundAspect" ref="loggerAroundAspect">
            <aop:around  method="aroundAdvice"  pointcut="execution(* com.winston.aop.logger.SimpleCalc+.*(..))"/>
        </aop:aspect>-->
    </aop:config>


</beans>